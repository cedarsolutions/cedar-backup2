# vim: set ft=text132:
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#              C E D A R
#          S O L U T I O N S       "Software done right."
#           S O F T W A R E
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Author   : Kenneth J. Pronovici <pronovic@ieee.org>
# Project  : Cedar Backup, release 2
# Revision : $Id$
# Purpose  : TODO list for package
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

REMAINING V2.0 RELEASE TASKS

* Get Julie's changes into the documentation
* Rewrite Cedar Backup webpage online
* Add 'manual.txt' option for building docs (lynx --dump or something?)

* Refactor out consistency check code and test it?
* Test consistency-check logic
* Build some unit tests for generic action-related code

* Run through full "normal" test cycle successfully on daystrom and agamemnon
* Finish fully testing rebuild logic 

* Come up with a standard svn label script to do releases, so I can't forget as easily.

* Manpage should list explicit return values, since we specify them anyway.
  Probably test and make sure that they come out with that number on the command-line.


FUTURE FUNCTIONALITY

* Add a config value or option for indicating whether backed-up files should be logged (if anyone cares).
* Implement capacity mode functionality, i.e. what to do with a full disc. (bug #6)
* Implement "safe overwrite" functionality based on disc label, and give users a way to label a disc (bug #5)
* Prevent two backups from running against the same config file (?)
* Make incremental backup safer if full is missed, i.e. "expire" incremental stuff after a week? (bug #6)
* Somehow figure out if a full backup (i.e. disc-restart) has been missed (bug #6)
* Perhaps update configuration to disallow two extensions with same name (right now, behavior is undefined).
* Perhaps update configuration to disallow two peers with same name (right now, behavior is undefined).
* Come up with non-PyUnit code to stress test high-actions, etc. 
* Create Subversion extension (initially, for backing up Berkely DB repositories)
* Create "system info" extension to dump fdisk information, etc. to collect directory.
* Create MySQL extension to back up MySQL databases like Bugzilla.

