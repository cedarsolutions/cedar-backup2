# vim: set ft=text132:
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#              C E D A R
#          S O L U T I O N S       "Software done right."
#           S O F T W A R E
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Author   : Kenneth J. Pronovici <pronovic@ieee.org>
# Project  : Cedar Backup, release 2
# Revision : $Id$
# Purpose  : TODO list for package
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

MISSING FUNCTIONALITY FOR 2.0

* Implement logic to check (today, yesterday, tomorrow) when storing, so backups work over midnite (bug #1)
* Implement consistency check in store action - it's not even stubbed right now.
* Put a check somewhere (not in the CD writer) to make sure the device isn't mounted
* Write individual action functions (process.py) in terms of other lower-level functionality
* Make sure that errors such as failure to connect to peer are reliably indicated outside of log (bug #12)
* Make validate action report on missing directories and bad permissions (at CLI level and not configuration level). (bug #7)
* Test _ActionSet and _ActionItem functionality, hopefully in a unit test of some sort
* Make sure that --full backup always backs up weekly items, even if it isn't the start of the week.


ADMINISTRATIVE

* Change sort order of parameters, classes within modules, etc. where needed in Epydoc
* Do a bunch of sample runs to get the logging level right (difference between "normal" and debug...?)


DOCUMENTATION

* Complete appendix A (extension interface)

* Manage footnotes better.  In some formats, duplicates look OK.  In others, they
  look stupid.  If two things use the "same" footnote (basically) then set an ID
  for the first time and refer to it later as needed.

* Make sure that sample config file is valid and has sensible, consistent paths in it
* Rewrite Cedar Backup webpage online, to show new version and link to old version.

* Write some sort of "what's new" paragraph for release of 2.0beta1
   - Entire codebase has been rewritten from the ground up using Python 2.3.
   - Cleaner, more pythonic, better structured, sensible mix of classes and functions
   - Much of the lower-level is intended to be general-purpose "library" code
   - All lower-level functionality is thoroughly regression tested via pyunit (1500+ individual unit tests)
   - Configuration class is standardized, so third-party Python programs can use it.
   - Uses Python's integrated logging for realtime logs, much better than old logs.
   - Uses Python's tar module rather than GNU tar via pipes, for more consistent behavior.
   - Internal use of pipes should now be more robust and less prone to problems.
   - New concept of extension modules and support for them.
   - Documentation has been completely rewritten
   - Document that we have dropped support for the tarz format (.tar.Z).


FUTURE FUNCTIONALITY

* Implement capacity mode functionality, i.e. what to do with a full disc. (bug #6)
* Implement "safe overwrite" functionality based on disc label, and give users a way to label a disc (bug #5)
* Prevent two backups from running against the same config file (?)
* Make incremental backup safer if full is missed, i.e. "expire" incremental stuff after a week? (bug #6)
* Somehow figure out if a full backup (i.e. disc-restart) has been missed (bug #6)


