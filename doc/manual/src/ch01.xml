<!--
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
#              C E D A R
#          S O L U T I O N S       "Software done right."
#           S O F T W A R E
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Copyright (c) 2005 Kenneth J. Pronovici.
# All rights reserved.
#
# This work is licensed under the Creative Commons Attribution-
# ShareAlike License. To view a copy of this license, visit
# http://creativecommons.org/licenses/by-sa/2.0/
# or send a letter to Creative Commons, 559 Nathan Abbott Way,
# Stanford, California 94305, USA.
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# Author   : Kenneth J. Pronovici <pronovic@ieee.org>
# Language : O'Reilly DocBook Lite XML DTD
# Project  : Cedar Backup, release 2
# Revision : $Id$
# Purpose  : Cedar Backup Software Manual, Chapter 1
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
-->

<chapter id="cedar-intro">

   <title>Introduction</title>

   <!-- ################################################################# -->

   <simplesect>
    
      <comment>Reference: http://en.wikiquote.org/wiki/Linus_Torvalds</comment>
      <comment>Reference: http://groups-beta.google.com/group/linux.dev.kernel/msg/76ae734d543e396d</comment>

      <blockquote>
         <para>
            <quote>Only wimps use tape backup: real men just upload their
            important stuff on ftp, and let the rest of the world mirror
            it.</quote>&mdash; Linus Torvalds, at the release of Linux 
            2.0.8 in July of 1996.
          </para>
      </blockquote>

   </simplesect>

   <!-- ################################################################# -->

   <sect1 id="cedar-intro-whatis">

      <title>What is Cedar Backup?</title>

      <para>
         Cedar Backup is a Python package that supports secure backups of files
         on local and remote hosts to CD-R or CD-RW media.  The package is
         focused around weekly backups to a single disc, with the expectation
         that the disc will be changed or overwritten at the beginning of each
         week.  If your hardware is new enough, the script can write
         multisession discs, allowing you to add to a disc in a daily fashion.
         Directories are backed up using tar and may be compressed using gzip
         or bzip2.
      </para>

      <para>
         There are many different backup software implementations out there in
         the free-and open-source world. Cedar Backup aims to fill a niche: it
         aims to be a good fit for people who need to back up a limited amount
         important data to CD-R or CD-RW on a regular basis. Cedar Backup isn't
         for you if you want to back up your MP3 collection every night, or if
         you want to back up a few hundred machines. However, if you administer 
         a small set machines and you want to run daily incremental backups
         for things like system configuration, current email, small web sites,
         or a CVS repository, then Cedar Backup is probably worth your time.
      </para>

   </sect1>

   <!-- ################################################################# -->

   <sect1 id="cedar-intro-history">

      <title>History</title>

      <para>
         Cedar Backup began life in late 2000 as a set of Perl scripts called
         <application>kbackup</application>.   These scripts met an immediate
         need (which was to back up skyjammer.com and some personal machines)
         but proved to be unstable, overly verbose and rather difficult to
         maintain.
      </para>

      <para>
         In early 2002, work began on a rewrite of
         <application>kbackup</application>.  The goal was to address many of
         the shortcomings of the original application, as well as to clean up
         the code and make it available to the general public.  While doing
         research related to code I could borrow or base the rewrite on, I
         discovered that there was already an existing backup package with the
         name <application>kbackup</application>, so I decided to change the
         name to <application>Cedar Backup</application> instead.
      </para>
         
      <para>
         Because I had become fed up with the prospect of maintaining a large
         volume of Perl code, I decided to abandon that language in favor of
         Python.  At the time, I chose Python mostly because I was interested
         in learning it, but in retrospect it turned out to be a very good
         decision.  Python has almost all of the strengths of Perl, but few of
         its inherent weaknesses (primarily, Python code often ends up being
         much more readable than Perl code).
      </para>

      <para>
         Around this same time, skyjammer.com and cedar-solutions.com were
         converted to run Debian (potato) and I entered the Debian new
         maintainer queue, so I also made it a goal to implement Debian
         packages along with a Python source distribution for the new release.
      </para>

      <para>
         Version 1.0 of <application>Cedar Backup</application> was released in
         June of 2002.  We immediately began using it to back up skyjammer.com
         and cedar-solutions.com, where it proved itself much more stable than
         the original code tree (it has been essentially trouble-free since).
         Along the way, Cedar Backup picked up a handful of other users who
         have occassionally reported bugs or requested minor enhancements.  
      </para>

      <para>
         In the meantime, I continued to improve as a Python programmer and
         also started doing a significant amount of professional development in
         Java.  It became obvious that the internal structure of
         <application>Cedar Backup</application> 1.0, while much better than
         <application>kbackup</application>, still left something to be
         desired.  In November of 2003, I began an aborted attempt at cleaning
         up the codebase.  I converted all of the internal documentation to use
         Epydoc, and updated the code to use the newly-released Python logging
         package.   However, I was still unsatisfied with the internal
         architecture of the code, which did not lend itself to automated
         regression testing and hence restricted my ability to safely enhance
         the code.
      </para>

      <para>
         So, rather than releasing the cleaned-up code, I instead began another
         ground-up rewrite in May of 2004.  With this rewrite, I applied
         everything I had learned in the meantime from other Java and Python
         development.  I structured the code to take advantage of Python's
         unique ability to blend procedural code with object-oriented code, and
         I made unit testing a primary requirement.  The result is the 2.0
         release, which is cleaner, more compact, better focused, and better
         documented than any release before it.  Utility code is less
         application-specific, and is now usable as a general-purpose library.
         The 2.0 release also includes a complete regression test suite of over
         1500 tests, which will help to ensure that quality is maintained as
         development continues into the future.
      </para>

   </sect1>

</chapter>

